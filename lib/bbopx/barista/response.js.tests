////
//// Some unit testing for respone.js
////
//// Usage:
////  rhino -modules static/bbop.js -opt -1 -f bbopx/barista/response.js -f bbopx/barista/response.js.tests -f -

////

// Load bbopx.
var bbop = require('bbop').bbop;
//var bbopx = require('bbopx').bbopx;
var bbopx = require('bbopx');
var mr_t = new bbop.test();

///
/// Start unit testing.
///

var same = mr_t.is_same_atom;

// Smells like a server exception (20140225).
(function(){

     var raw = {"message-type":"error",
		"message":"Exception!",
		"commentary":"blah"};

     var resp = new bbopx.barista.response(raw);

     same(resp.okay(), true, 'viable response');
     same(resp.message_type(), 'error', 'm type');
     same(resp.message(), 'Exception!', 'm');
     same(resp.commentary(), 'blah', 'comments');
     
 })();

// Real data coming in (20140225).
(function(){

     var raw = {"uid":"foo",
		"intention":"information",
		"signal":"rebuild",
		"message-type":"success",
		"message":"success",
		"data":{"id":"gomodel:wb-GO_0043053",
			"facts":[],
			"properties":[],
			"individuals":[]
		       }
	       };
     var resp = new bbopx.barista.response(raw);
     
     same(resp.okay(), true, 'viable real response');
     same(resp.message_type(), 'success', 'success type');
     same(resp.message(), 'success', 'success message');
     same(resp.user_id(), 'foo', 'foo user');
     same(resp.intention(), 'information', 'just want info');
     same(resp.signal(), 'rebuild', 'but will need to rebuild');
     same(resp.commentary(), null, 'no comments');
     same(bbop.core.what_is(resp.data()), 'object', 'have some data');
     same(resp.model_id(), 'gomodel:wb-GO_0043053', 'has a model id');
     same(resp.inconsistent_p(), false, 'looks consistent');
     same(resp.facts().length, 0, 'removed facts for test');
     same(resp.facts().length, 0, 'removed facts for test');
     same(resp.properties().length, 0, 'removed properties for test');
     same(resp.individuals().length, 0, 'removed individuals for test');
     same(resp.relations().length, 0, 'no relations requested');
     same(resp.evidence().length, 0, 'no evidence requested');
     
 })();

///
/// End unit testing.
///

// Final report.
mr_t.report();
